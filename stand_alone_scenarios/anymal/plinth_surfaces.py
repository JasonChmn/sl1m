import numpy as np

from numpy import array, asmatrix, matrix, zeros, ones
from numpy import array, dot, stack, vstack, hstack, asmatrix, identity, cross, concatenate
from numpy.linalg import norm


surfaces_and_normals = [([[0.3034299792755432, -0.47183737890990535, 0.3400000035762787],
   [0.5665700850974731, -0.47183737890990535, 0.3400000035762787],
   [0.5665700850974731, 0.47183737890990535, 0.3400000035762787],
   [0.3034299792755432, 0.47183737890990535, 0.3400000035762787]],
  [0.0, -0.0, 1.0]),
 ([[0.593429998172056, 0.4718373781957359, 0.17000000178813934],
   [0.593429998172056, -0.4718373781957359, 0.17000000178813934],
   [0.8565700495116598, -0.4718373781957359, 0.17000000178813934],
   [0.8565700495116598, 0.4718373781957359, 0.17000000178813934]],
  [0.0, 0.0, 1.0]),
 ([[0.26564660367538145, 0.47633178835662127, 0.5099999904632568],
   [-0.26564660367538145, 0.47633178835662127, 0.5099999904632568],
   [-0.26564660367538145, -0.47633178835662127, 0.5099999904632568],
   [0.26564660367538145, -0.47633178835662127, 0.5099999904632568]],
  [-0.0, 0.0, 1.0]),
 ([[-0.5665700850974731, -0.47183737890990535, 0.3400000035762787],
   [-0.3034299792755432, -0.47183737890990535, 0.3400000035762787],
   [-0.3034299792755432, 0.47183737890990535, 0.3400000035762787],
   [-0.5665700850974731, 0.47183737890990535, 0.3400000035762787]],
  [0.0, 0.0, 1.0]),
 ([[-0.8565700495116598, -0.4718373781957359, 0.17000000178813934],
   [-0.593429998172056, -0.4718373781957359, 0.17000000178813934],
   [-0.593429998172056, 0.4718373781957359, 0.17000000178813934],
   [-0.8565700495116598, 0.4718373781957359, 0.17000000178813934]],
  [0.0, 0.0, 1.0]),
 ([[0.9149303150791465, -0.49806217758667415, 0.],
   [2.9550696896892252, -0.49806217758667415, 0.],
   [2.9550696896892252, 0.49806217758667415, 0.],
   [0.9149303150791465, 0.49806217758667415, 0.]],
  [0.0, -1.2246467956981e-16, 1.0]),
 ([[-0.9149303150791465, 0.49806217758667415, 0.],
   [-2.9550696896892252, 0.49806217758667415, 0.],
   [-2.9550696896892252, -0.49806217758667415, 0.],
   [-0.9149303150791465, -0.49806217758667415, 0.]],
  [0.0, -1.2246467956981e-16, 1.0])]

all_surfaces = [el[0] for el in surfaces_and_normals]

all_surfaces_array = [array(el).T for el in all_surfaces]

default_surfaces = [all_surfaces_array for _ in range (10)]

default_init_pos = [array([-1.3, 0.2, -0.0]), array([-1.3, -0.2, -0.0]), array([-2.1, 0.2, -0.0]), array([-2.1, -0.2, -0.0])]
default_init_com = array([-1.7, -0.0, 0.4])


import mpl_toolkits.mplot3d as a3
import matplotlib.colors as colors
import scipy as sp
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


def draw_rectangle(l, ax):
    #~ plotPoints(ax,l)
    lr = l + [l[0]]
    cx = [c[0] for c in lr]
    cy = [c[1] for c in lr]
    cz = [c[2] for c in lr]
    ax.plot(cx, cy, cz)
    
def draw_scene(surfs = all_surfaces, ax = None, color = "p"):
    if ax is None:        
        fig = plt.figure()
        ax = fig.add_subplot(111, projection="3d")
    [draw_rectangle(l,ax) for l in surfs]
    return ax

if __name__ == '__main__':    


    
    draw_scene()
    for surf in all_surfaces:
        draw_scene([surf])

    plt.show(block = False)
    
